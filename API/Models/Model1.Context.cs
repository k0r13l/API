//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MODEL1 : DbContext
    {
        public MODEL1()
            : base("name=MODEL1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ALERGIA> ALERGIA { get; set; }
        public virtual DbSet<ALERGIA_PACIENTE> ALERGIA_PACIENTE { get; set; }
        public virtual DbSet<CITA> CITA { get; set; }
        public virtual DbSet<MEDICO> MEDICO { get; set; }
        public virtual DbSet<PACIENTE> PACIENTE { get; set; }
        public virtual DbSet<PACIENTE_TELEFONO> PACIENTE_TELEFONO { get; set; }
        public virtual DbSet<VACUNA> VACUNA { get; set; }
        public virtual DbSet<VACUNA_PACIENTE> VACUNA_PACIENTE { get; set; }
    
        public virtual int sp_actualizar_desc_cita(Nullable<int> iDP, string dESCRIP)
        {
            var iDPParameter = iDP.HasValue ?
                new ObjectParameter("IDP", iDP) :
                new ObjectParameter("IDP", typeof(int));
    
            var dESCRIPParameter = dESCRIP != null ?
                new ObjectParameter("DESCRIP", dESCRIP) :
                new ObjectParameter("DESCRIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_actualizar_desc_cita", iDPParameter, dESCRIPParameter);
        }
    
        public virtual ObjectResult<sp_buscar_cita_Result> sp_buscar_cita(string cEDULA)
        {
            var cEDULAParameter = cEDULA != null ?
                new ObjectParameter("CEDULA", cEDULA) :
                new ObjectParameter("CEDULA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_buscar_cita_Result>("sp_buscar_cita", cEDULAParameter);
        }
    
        public virtual ObjectResult<string> sp_buscar_usuario(string cedula_p, string codigo_p, string contrasenna_p)
        {
            var cedula_pParameter = cedula_p != null ?
                new ObjectParameter("cedula_p", cedula_p) :
                new ObjectParameter("cedula_p", typeof(string));
    
            var codigo_pParameter = codigo_p != null ?
                new ObjectParameter("codigo_p", codigo_p) :
                new ObjectParameter("codigo_p", typeof(string));
    
            var contrasenna_pParameter = contrasenna_p != null ?
                new ObjectParameter("contrasenna_p", contrasenna_p) :
                new ObjectParameter("contrasenna_p", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_buscar_usuario", cedula_pParameter, codigo_pParameter, contrasenna_pParameter);
        }
    
        public virtual ObjectResult<string> sp_buscar_usuario_paciente(string cedula_p, string contrasenna_p)
        {
            var cedula_pParameter = cedula_p != null ?
                new ObjectParameter("cedula_p", cedula_p) :
                new ObjectParameter("cedula_p", typeof(string));
    
            var contrasenna_pParameter = contrasenna_p != null ?
                new ObjectParameter("contrasenna_p", contrasenna_p) :
                new ObjectParameter("contrasenna_p", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_buscar_usuario_paciente", cedula_pParameter, contrasenna_pParameter);
        }
    
        public virtual int sp_eliminar_alergia_paciente(Nullable<int> iDC)
        {
            var iDCParameter = iDC.HasValue ?
                new ObjectParameter("IDC", iDC) :
                new ObjectParameter("IDC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_eliminar_alergia_paciente", iDCParameter);
        }
    
        public virtual int sp_eliminar_cita(Nullable<int> iDC)
        {
            var iDCParameter = iDC.HasValue ?
                new ObjectParameter("IDC", iDC) :
                new ObjectParameter("IDC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_eliminar_cita", iDCParameter);
        }
    
        public virtual int sp_eliminar_vacuna_paciente(Nullable<int> iDC)
        {
            var iDCParameter = iDC.HasValue ?
                new ObjectParameter("IDC", iDC) :
                new ObjectParameter("IDC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_eliminar_vacuna_paciente", iDCParameter);
        }
    
        public virtual int sp_insertar_alergia_paciente(string cEDULA_P, string cEDULA_M, string nOMBRE_ALERGIA, Nullable<System.DateTime> fECHA_DIAGNOSTICO, string mEDICAMENTOS)
        {
            var cEDULA_PParameter = cEDULA_P != null ?
                new ObjectParameter("CEDULA_P", cEDULA_P) :
                new ObjectParameter("CEDULA_P", typeof(string));
    
            var cEDULA_MParameter = cEDULA_M != null ?
                new ObjectParameter("CEDULA_M", cEDULA_M) :
                new ObjectParameter("CEDULA_M", typeof(string));
    
            var nOMBRE_ALERGIAParameter = nOMBRE_ALERGIA != null ?
                new ObjectParameter("NOMBRE_ALERGIA", nOMBRE_ALERGIA) :
                new ObjectParameter("NOMBRE_ALERGIA", typeof(string));
    
            var fECHA_DIAGNOSTICOParameter = fECHA_DIAGNOSTICO.HasValue ?
                new ObjectParameter("FECHA_DIAGNOSTICO", fECHA_DIAGNOSTICO) :
                new ObjectParameter("FECHA_DIAGNOSTICO", typeof(System.DateTime));
    
            var mEDICAMENTOSParameter = mEDICAMENTOS != null ?
                new ObjectParameter("MEDICAMENTOS", mEDICAMENTOS) :
                new ObjectParameter("MEDICAMENTOS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertar_alergia_paciente", cEDULA_PParameter, cEDULA_MParameter, nOMBRE_ALERGIAParameter, fECHA_DIAGNOSTICOParameter, mEDICAMENTOSParameter);
        }
    
        public virtual int sp_insertar_cita(string cEDM, string cEDP, string cENTRO_S, Nullable<System.DateTime> fECHA, string eSP)
        {
            var cEDMParameter = cEDM != null ?
                new ObjectParameter("CEDM", cEDM) :
                new ObjectParameter("CEDM", typeof(string));
    
            var cEDPParameter = cEDP != null ?
                new ObjectParameter("CEDP", cEDP) :
                new ObjectParameter("CEDP", typeof(string));
    
            var cENTRO_SParameter = cENTRO_S != null ?
                new ObjectParameter("CENTRO_S", cENTRO_S) :
                new ObjectParameter("CENTRO_S", typeof(string));
    
            var fECHAParameter = fECHA.HasValue ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(System.DateTime));
    
            var eSPParameter = eSP != null ?
                new ObjectParameter("ESP", eSP) :
                new ObjectParameter("ESP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertar_cita", cEDMParameter, cEDPParameter, cENTRO_SParameter, fECHAParameter, eSPParameter);
        }
    
        public virtual int sp_insertar_paciente(string cEDULA, string nOMBRE, string aPELLIDOS, Nullable<System.DateTime> fECHA_NAC, string tIPO_SANGRE, string eSTADO_CIVIL, string pROVINCIA, string cANTON, string dISTRITO, string oTRAS_SEÑAS, string cONTRASENNA)
        {
            var cEDULAParameter = cEDULA != null ?
                new ObjectParameter("CEDULA", cEDULA) :
                new ObjectParameter("CEDULA", typeof(string));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var aPELLIDOSParameter = aPELLIDOS != null ?
                new ObjectParameter("APELLIDOS", aPELLIDOS) :
                new ObjectParameter("APELLIDOS", typeof(string));
    
            var fECHA_NACParameter = fECHA_NAC.HasValue ?
                new ObjectParameter("FECHA_NAC", fECHA_NAC) :
                new ObjectParameter("FECHA_NAC", typeof(System.DateTime));
    
            var tIPO_SANGREParameter = tIPO_SANGRE != null ?
                new ObjectParameter("TIPO_SANGRE", tIPO_SANGRE) :
                new ObjectParameter("TIPO_SANGRE", typeof(string));
    
            var eSTADO_CIVILParameter = eSTADO_CIVIL != null ?
                new ObjectParameter("ESTADO_CIVIL", eSTADO_CIVIL) :
                new ObjectParameter("ESTADO_CIVIL", typeof(string));
    
            var pROVINCIAParameter = pROVINCIA != null ?
                new ObjectParameter("PROVINCIA", pROVINCIA) :
                new ObjectParameter("PROVINCIA", typeof(string));
    
            var cANTONParameter = cANTON != null ?
                new ObjectParameter("CANTON", cANTON) :
                new ObjectParameter("CANTON", typeof(string));
    
            var dISTRITOParameter = dISTRITO != null ?
                new ObjectParameter("DISTRITO", dISTRITO) :
                new ObjectParameter("DISTRITO", typeof(string));
    
            var oTRAS_SEÑASParameter = oTRAS_SEÑAS != null ?
                new ObjectParameter("OTRAS_SEÑAS", oTRAS_SEÑAS) :
                new ObjectParameter("OTRAS_SEÑAS", typeof(string));
    
            var cONTRASENNAParameter = cONTRASENNA != null ?
                new ObjectParameter("CONTRASENNA", cONTRASENNA) :
                new ObjectParameter("CONTRASENNA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertar_paciente", cEDULAParameter, nOMBREParameter, aPELLIDOSParameter, fECHA_NACParameter, tIPO_SANGREParameter, eSTADO_CIVILParameter, pROVINCIAParameter, cANTONParameter, dISTRITOParameter, oTRAS_SEÑASParameter, cONTRASENNAParameter);
        }
    
        public virtual int sp_insertar_vacuna_paciente(string nOMBRE_V, string cEDULA, string cEDULAM, Nullable<System.DateTime> fECHA_A, Nullable<System.DateTime> fECHA_P)
        {
            var nOMBRE_VParameter = nOMBRE_V != null ?
                new ObjectParameter("NOMBRE_V", nOMBRE_V) :
                new ObjectParameter("NOMBRE_V", typeof(string));
    
            var cEDULAParameter = cEDULA != null ?
                new ObjectParameter("CEDULA", cEDULA) :
                new ObjectParameter("CEDULA", typeof(string));
    
            var cEDULAMParameter = cEDULAM != null ?
                new ObjectParameter("CEDULAM", cEDULAM) :
                new ObjectParameter("CEDULAM", typeof(string));
    
            var fECHA_AParameter = fECHA_A.HasValue ?
                new ObjectParameter("FECHA_A", fECHA_A) :
                new ObjectParameter("FECHA_A", typeof(System.DateTime));
    
            var fECHA_PParameter = fECHA_P.HasValue ?
                new ObjectParameter("FECHA_P", fECHA_P) :
                new ObjectParameter("FECHA_P", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertar_vacuna_paciente", nOMBRE_VParameter, cEDULAParameter, cEDULAMParameter, fECHA_AParameter, fECHA_PParameter);
        }
    
        public virtual int sp_listar_actualizar_info_paciente(string cEDULAP, string eSTADOC, string pROV, string cANTON, string dISTRITO, string oTRAS_S)
        {
            var cEDULAPParameter = cEDULAP != null ?
                new ObjectParameter("CEDULAP", cEDULAP) :
                new ObjectParameter("CEDULAP", typeof(string));
    
            var eSTADOCParameter = eSTADOC != null ?
                new ObjectParameter("ESTADOC", eSTADOC) :
                new ObjectParameter("ESTADOC", typeof(string));
    
            var pROVParameter = pROV != null ?
                new ObjectParameter("PROV", pROV) :
                new ObjectParameter("PROV", typeof(string));
    
            var cANTONParameter = cANTON != null ?
                new ObjectParameter("CANTON", cANTON) :
                new ObjectParameter("CANTON", typeof(string));
    
            var dISTRITOParameter = dISTRITO != null ?
                new ObjectParameter("DISTRITO", dISTRITO) :
                new ObjectParameter("DISTRITO", typeof(string));
    
            var oTRAS_SParameter = oTRAS_S != null ?
                new ObjectParameter("OTRAS_S", oTRAS_S) :
                new ObjectParameter("OTRAS_S", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_listar_actualizar_info_paciente", cEDULAPParameter, eSTADOCParameter, pROVParameter, cANTONParameter, dISTRITOParameter, oTRAS_SParameter);
        }
    
        public virtual ObjectResult<sp_listar_alergia_paciente_Result> sp_listar_alergia_paciente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_alergia_paciente_Result>("sp_listar_alergia_paciente");
        }
    
        public virtual ObjectResult<sp_listar_alergia_paciente_por_cedula_Result> sp_listar_alergia_paciente_por_cedula(string cEDULAP)
        {
            var cEDULAPParameter = cEDULAP != null ?
                new ObjectParameter("CEDULAP", cEDULAP) :
                new ObjectParameter("CEDULAP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_alergia_paciente_por_cedula_Result>("sp_listar_alergia_paciente_por_cedula", cEDULAPParameter);
        }
    
        public virtual ObjectResult<sp_listar_alergias_Result> sp_listar_alergias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_alergias_Result>("sp_listar_alergias");
        }
    
        public virtual ObjectResult<string> sp_listar_cedula_vacunados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_listar_cedula_vacunados");
        }
    
        public virtual ObjectResult<string> sp_listar_cedulas_alergicos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_listar_cedulas_alergicos");
        }
    
        public virtual ObjectResult<sp_listar_citas_Result> sp_listar_citas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_citas_Result>("sp_listar_citas");
        }
    
        public virtual ObjectResult<sp_listar_citas_ALL_Result> sp_listar_citas_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_citas_ALL_Result>("sp_listar_citas_ALL");
        }
    
        public virtual ObjectResult<sp_listar_citas_por_cedula_Result> sp_listar_citas_por_cedula(string cEDP)
        {
            var cEDPParameter = cEDP != null ?
                new ObjectParameter("CEDP", cEDP) :
                new ObjectParameter("CEDP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_citas_por_cedula_Result>("sp_listar_citas_por_cedula", cEDPParameter);
        }
    
        public virtual ObjectResult<sp_listar_info_paciente_Result> sp_listar_info_paciente(string cEDULAP)
        {
            var cEDULAPParameter = cEDULAP != null ?
                new ObjectParameter("CEDULAP", cEDULAP) :
                new ObjectParameter("CEDULAP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_info_paciente_Result>("sp_listar_info_paciente", cEDULAPParameter);
        }
    
        public virtual ObjectResult<sp_listar_vacuna_paciente_Result> sp_listar_vacuna_paciente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_vacuna_paciente_Result>("sp_listar_vacuna_paciente");
        }
    
        public virtual ObjectResult<sp_listar_vacuna_paciente_por_cedula_Result> sp_listar_vacuna_paciente_por_cedula(string cEDULAP)
        {
            var cEDULAPParameter = cEDULAP != null ?
                new ObjectParameter("CEDULAP", cEDULAP) :
                new ObjectParameter("CEDULAP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_vacuna_paciente_por_cedula_Result>("sp_listar_vacuna_paciente_por_cedula", cEDULAPParameter);
        }
    
        public virtual ObjectResult<sp_listar_vacunas_Result> sp_listar_vacunas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_vacunas_Result>("sp_listar_vacunas");
        }
    }
}
